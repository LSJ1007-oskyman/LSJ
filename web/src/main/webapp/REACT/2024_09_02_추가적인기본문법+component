1.카멜표기법으로 CSS설정을 하자.
2.css파일 상에서는 본래 HTML에서 했던것처럼 설정하면된다.
3.외부 CSS파일을 불러올때 class속성대신에 className속성을 사용해야한다.
예를 들어 css파일에 .react선택자 css속성을 설정하면
설정하고싶은 객체에 <div className='react'>와 같이 지정해야한다.
4.REACT프로젝트 상에서는 열린 태그는 반드시 닫아 주어야 한다.
본래 HTML상에서는 <input><br>을 닫을필요가 없었는데 REACT에서는 반드시 닫아야한다.
5.<input/>,<br/>와 같이 열고 닫고를 한번에 수행할 수도 있다.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

component 
 1. 리액트를 사용하여 애플리케이션의 인터페이스를 설계할때 사용자가 볼 수 
있는 요소는 여러가지 컴포넌트로 구성된다.
 2. 컴포넌트를 선언하는 방식은 클래스형 컴포넌트와 함수형 컴포넌트가 있다.
 3. 클래스형 컴포넌트는 state 기능 및 라이프사이클 API를 사용할 수 있다.
 4. 함수형 컴포넌트의 단점은 state와 라이프사이클 API를 사용할 수 없었지만,
리액트 v16.8 이후에 훅(Hooks)이라는 기능이 도입 되면서 해결 되었다.
 5. 리액트 공식 매뉴얼에서는 함수형 컴포넌트와 Hooks을 사용하도록 권장하고 
있다.
 6. 컴포넌트의 첫 글자는 항상 대문자로 시작 해야 한다.-->소문자로 하면 태그로 인식한다.
컴포넌트를 소문자로 시작하면 DOM 태그로 처리한다.
 7. 컴포넌트를 이용해서 UI를 재사용 가능한 개별적인 여러 조각으로 나누고, 
각 조각을 개별적으로 나누어 코딩한다.
 8. 자식 컴포넌트에게 값을 전달할때 props를 사용할 수 있다.

 props
 1. props는 프로퍼티(properties)의 줄임말 이다.
 2. props는 부모 컴포넌트에서 자식 컴포넌트에게 데이터를 전달할 때 
사용한다.
 3. props를 전달받은 자식 컴포넌트에서는 데이터를 수정할 수 없다


- ES6문법으로 함수를 만들면 const App2 = () =>{함수내용} 이렇게 만들어야 한다.


